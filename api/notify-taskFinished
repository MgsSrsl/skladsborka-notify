import admin from "firebase-admin";

let app;
function initAdmin() {
  if (app) return app;
  const raw = process.env.FIREBASE_SERVICE_ACCOUNT;
  if (!raw) throw new Error("Missing FIREBASE_SERVICE_ACCOUNT");
  const sa = JSON.parse(raw);
  sa.private_key = sa.private_key.replace(/\\n/g, "\n").trim();
  app = admin.initializeApp({
    credential: admin.credential.cert(sa),
    projectId: sa.project_id,
  });
  return app;
}

export default async function handler(req, res) {
  try {
    initAdmin();
    const method = req.method || "GET";

    // ✅ читаем JSON тело
    let taskId = req.query.taskId;
    if (method === "POST" && !taskId) {
      try {
        const chunk = await new Promise((resolve, reject) => {
          let data = "";
          req.on("data", (c) => (data += c));
          req.on("end", () => resolve(data));
          req.on("error", reject);
        });
        if (chunk) {
          const parsed = JSON.parse(chunk);
          taskId = parsed.taskId;
        }
      } catch (_) {}
    }

    if (!taskId) return res.status(400).json({ ok: false, error: "Missing taskId" });

    const db = admin.firestore();
    const doc = await db.collection("tasks").doc(taskId).get();
    if (!doc.exists) return res.status(404).json({ ok: false, error: "task not found" });

    const task = doc.data() || {};
    const title = task.title || "Без названия";
    const creatorId = task.creatorId;
    const takenByName = task.takenByName || task.assigneeNames?.[0] || "кладовщик";

    const users = [];
    if (creatorId) {
      const u = await db.collection("users").doc(creatorId).get();
      if (u.exists) users.push({ id: u.id, ...u.data() });
    }

    const tokens = [...new Set(users.flatMap(u => u.fcmTokens || []))].filter(Boolean);

    // Полезные логи в проде
    console.log("[notify-taskFinished] taskId:", taskId,
                "creatorId:", creatorId,
                "tokens:", tokens.length);

    if (tokens.length === 0) {
      return res.status(200).json({ ok: true, sent: 0, info: "no tokens" });
    }

    const msg = {
      tokens,
      notification: {
        title: "Задача завершена",
        body: `«${title}» выполнена (${takenByName})`,
      },
      data: { taskId },
    };

    const out = await admin.messaging().sendEachForMulticast(msg);
    console.log("[notify-taskFinished] result:", out.successCount, out.failureCount, out.responses?.map(r=>r.error?.message).filter(Boolean));
    res.status(200).json({ ok: true, sent: out.successCount, failed: out.failureCount });
  } catch (e) {
    console.error(e);
    res.status(500).json({ ok: false, error: e.message || "error" });
  }
}
